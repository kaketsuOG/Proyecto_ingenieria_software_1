import { IOptions, ITransactionCreateResponse, IErrorResponse, ITransactionCommitResponse, ITransactionStatusResponse, ITransactionRefundResponse, ITransactionCaptureResponse } from '~/interfaces';
/**
 * Create normal transaction
 *
 * @param buyOrder string
 * @param sessionId string
 * @param amount number
 * @param returnUrl string
 * @param options IOptions
 * @returns ITransactionCreateResponse | IErrorResponse
 */
export declare function create(buyOrder: string, sessionId: string, amount: number, returnUrl: string, options: IOptions): Promise<ITransactionCreateResponse | IErrorResponse>;
/**
 * commit transaction
 *
 * @param token
 * @param options
 * @returns
 */
export declare function commit(token: string, options: IOptions): Promise<ITransactionCommitResponse | IErrorResponse>;
/**
 * Get Transaction Status
 *
 * @param token
 * @param options
 * @returns ITransactionStatusResponse | IErrorResponse
 */
export declare function getStatus(token: string, options: IOptions): Promise<ITransactionStatusResponse | IErrorResponse>;
/**
 *  reverse, or nullify transaction, also refund some balance
 *
 * @param token
 * @param amount
 * @returns ITransactionRefundResponse | IErrorResponse>
 */
export declare function refund(token: string, amount: number, options: IOptions): Promise<ITransactionRefundResponse | IErrorResponse>;
/**
 * capture transaction
 *
 * @param token
 * @param buyOrder
 * @param authorizationCode
 * @param captureAmount
 * @param options
 * @returns ITransactionCaptureResponse | IErrorResponse
 */
export declare function capture(token: string, buyOrder: string, authorizationCode: string, captureAmount: number, options: IOptions): Promise<ITransactionCaptureResponse | IErrorResponse>;
